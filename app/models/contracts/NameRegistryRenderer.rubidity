pragma :rubidity, "1.0.0"

contract :NameRegistryRenderer, abstract: true do
  string :public, :cardTemplate
  
  constructor(cardTemplate: :string) {
    s.cardTemplate = cardTemplate
  }
  
  function :renderCard, {
    tokenId: :uint256,
    name: :string,
    # displayName: :string,
    # stickerImages: [:string],
    # stickerPositionXCoords: [:uint256],
    # stickerPositionYCoords: [:uint256],
  }, :public, :view, returns: :string do
    template = "`#{s.cardTemplate}`"
    
    storage = esc.jsonEncode(
      tokenId: tokenId.toString(),
      name: name
    )
    
    wrapped = <<~HTML
      <script>
        window.s = JSON.parse(#{storage.to_json});
        document.open();
        document.write(#{template});
        document.close();
      </script>
    HTML
  end
end
